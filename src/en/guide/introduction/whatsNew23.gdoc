h4. Improved Dependency Management

The default dependency resolution engine used by Grails has been changed to [Aether|http://eclipse.org/aether], the dependency resolution engine used by Maven. Which engine you use can be configured in @BuildConfig@:

{code}
grails.project.dependency.resolver = "maven" // or ivy
{code}

Using Aether dependency resolution in Grails results in the same behavior as when using the Maven build tool, meaning improved snapshot handling, understanding of custom packaging types and so on.

In addition, the [dependency-report|commandLine] command has been updated to print the dependency graph of the console, which helps in diagnosing dependency resolution failures. See the chapter on [Dependency Resolution|guide:dependencyResolution] for more information.

h4. Command Line

The @create-app@ command will now by default generate the command line grailsw wrapper for newly created applications.  The @--skip-wrapper@ switch may be used to prevent the wrapper from being generated.

{code}
grails create-app appname --skip-wrapper
{code}

h4. Data Binder

Grails 2.3 includes a new data binding mechanism which is more flexible and easier to maintain than the data binder used in previous versions.  The new data binder includes numerous enhancements including:

* Custom date formats on a per field basis using [BindingFormat|api:org.grails.databinding.BindingFormat]
* User defined data converters using [ValueConverter|api:org.grails.databinding.converters.ValueConverter]
* User defined formatted data converters using [BindingFormat|api:org.grails.databinding.BindingFormat] and [FormattedValueConverter|api:org.grails.databinding.converters.FormattedValueConverter]
* Custom binding on a per class basis using [BindUsing|api:org.grails.databinding.BindUsing]
* Custom binding on a per field basis using [BindUsing|api:org.grails.databinding.BindUsing]

See the [Data Binding|guide:dataBinding] section for details.

The legacy data binder may be used by assinging @true@ to the @grails.databinding.useLegacyBinder@ property in @grails-app/conf/Config.groovy@.  Note that the legacy binder does not support any of the new features provided by the new data binder.

