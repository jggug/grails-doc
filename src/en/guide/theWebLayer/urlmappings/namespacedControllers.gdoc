An application is not allowed to define multiple controllers with the same
name, even if they are defined in separate packages.  For example an
application may not contain @com.accounting.ReportingController@ and
@com.humanresources.ReportingController@.  However it is allowed for
an application to use a plugin which provides a controller with the
same name as a controller provided by the application as long as the
controllers are in separate packages.  For example, an application
may include a controller named @com.accounting.ReportingController@
and the application may use a plugin which provides a controller
named @com.humanresources.ReportingController@.  The only issue
with that is the URL mapping for the controller provided by the
plugin needs to be explicit in specifying that the mapping applies
to the @ReportingController@ which is provided by the plugin.

See the following example.

{code:java}
static mappings = {
    "/accountingReports" {
        controller = "reporting"
    }
    "/humanResourceReports" {
        controller = "reporting"
        plugin = "humanResources"
    }
}
{code}

With that mapping in place, a request to @/accountingReports@ will
be handled by the @ReportingController@ which is defined in the
application.  A request to @/humanResourceReports@ will be handled
by the @ReportingController@ which is provided by the @humanResources@
plugin.

There could be any number of @ReportingController@ controllers provided
by any number of plugins but no plugin may provide more than one
@ReportingController@ even if they are defined in separate packages.

Assigning a value to the @plugin@ variable in the mapping is only
required if there are multiple controllers with the same name
available at runtime provided by the application and/or plugins.
If the @humanResources@ plugin provides a @ReportingController@ and
there is no other @ReportingController@ available at runtime, the
following mapping would work.

{code:java}
static mappings = {
    "/humanResourceReports" {
        controller = "reporting"
    }
}
{code}

It is best practice to be explicit about the fact that the controller
is being provided by a plugin though.


